name: Flutter Build Workflow- final 2546

on:
  workflow_dispatch: # Allows manual triggering of the workflow

env:
  FLUTTER_VERSION: "3.10.6" # Specify the Flutter version you want to use
  TARGET_PLATFORM: "android-arm64" # Target platform for the build

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK (required for Android builds)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Use Temurin JDK
          java-version: '17'

      # Step 3: Install Flutter
      - name: Install Flutter
        run: |
          wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
          tar xf flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH

      # Step 4: Run Flutter Doctor
      - name: Run Flutter Doctor
        run: flutter doctor -v

      # Step 5: Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      # Step 6: Build the Flutter App (Release APK)
      - name: Build Release APK
        run: |
          flutter build apk --release \
            --target-platform ${{ env.TARGET_PLATFORM }} \
            --dart-define=FLUTTER_BUILD_MODE=release

      # Step 7: Upload the APK as an artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
